-- QUESTION 1
SELECT MIN(INVEN_AMOUNT), MAX(INVEN_MAX_STOCK), ROUND(AVG(INVEN_REORDER_POINT))
FROM INVENTORY;

-- QUESTION 2
SELECT AVG(RES_BONUS)
FROM RESEARCHER;

-- QUESTION 3
SELECT ROUND(AVG(PAY_AMOUNT)) AS AVG_CREDIT_PAY_AMOUNT
FROM PAYMENT
WHERE PAY_TYPE = 'Credit Card';

-- QUESTION 4
SELECT ANIM_GENDER, COUNT(ANIM_ID)
FROM ANIMAL
GROUP BY ANIM_GENDER;

-- QUESTION 5
SELECT EMP_CITY, SUM(EMP_SALARY)
FROM EMPLOYEE
GROUP BY EMP_CITY;

-- QUSTION 6
SELECT PRODUCT_ID, MIN(INVEN_AMOUNT)
FROM INVENTORY
GROUP BY PRODUCT_ID;

-- QUESTION 7
SELECT FOOD_SUPPLIER.FOOD_SUP_COMPANY_NAME, COUNT(FOOD_ITEM_SUPPLIER.FOOD_ITEM_ID)
FROM FOOD_ITEM_SUPPLIER
JOIN FOOD_SUPPLIER
	ON FOOD_ITEM_SUPPLIER.FOOD_SUP_ID = FOOD_SUPPLIER.FOOD_SUP_ID
GROUP BY FOOD_SUPPLIER.FOOD_SUP_COMPANY_NAME;

-- QUESTION 8
SELECT EMPLOYEE.DEPT_ID, COUNT(EMPLOYEE.EMP_ID)
FROM EMPLOYEE
GROUP BY EMPLOYEE.DEPT_ID;

-- QUESTION 9
SELECT FOOD_SUPPLIER.FOOD_SUP_COMPANY_NAME, COUNT(FOOD_ITEM_SUPPLIER.FOOD_ITEM_ID)
FROM FOOD_SUPPLIER
JOIN FOOD_ITEM_SUPPLIER
	ON FOOD_SUPPLIER.FOOD_SUP_ID = FOOD_ITEM_SUPPLIER.FOOD_SUP_ID
GROUP BY FOOD_SUPPLIER.FOOD_SUP_COMPANY_NAME;

-- QUESTION 10
SELECT FOOD_SUP_ID, COUNT(FOOD_ITEM_ID)
FROM FOOD_ITEM_SUPPLIER
GROUP BY FOOD_SUP_ID
HAVING COUNT(DISTINCT FOOD_ITEM_ID) > 40;

-- QUESTION 11
SELECT AVG(PAY_AMOUNT), PAY_TYPE
FROM PAYMENT
GROUP BY PAY_TYPE
HAVING AVG(PAY_AMOUNT) > 500;

-- QUESTION 12
SELECT PRODUCT_ID, SUM(INVEN_AMOUNT)
FROM INVENTORY
GROUP BY PRODUCT_ID
HAVING SUM(INVEN_AMOUNT) >= 500
ORDER BY SUM(INVEN_AMOUNT);

-- QUESTION 13
SELECT ZOO.ZOO_NAME
FROM ZOO
JOIN EMPLOYEE
	ON ZOO.ZOO_ID = EMPLOYEE.ZOO_ID
JOIN KEEPER
	ON EMPLOYEE.EMP_ID = KEEPER.EMP_ID
GROUP BY ZOO.ZOO_NAME
HAVING COUNT(KEEPER.EMP_ID) > 10;

-- QUESTION 14
SELECT ANIMAL_BREED.ANIM_BREED_NAME
FROM ANIMAL_BREED
JOIN ANIMAL
	ON ANIMAL_BREED.ANIM_BREED_ID = ANIMAL.ANIM_BREED_ID
GROUP BY ANIMAL_BREED.ANIM_BREED_NAME
HAVING AVG(ANIMAL.ANIM_HEIGHT_ON_ARRIVAL) > 20;

-- QUESTION 15
SELECT ANIMAL.ANIM_NAME, ANIMAL.ANIM_GENDER, ANIMAL_BREED.ANIM_BREED_NAME
FROM ANIMAL
JOIN ANIMAL_BREED
	ON ANIMAL.ANIM_BREED_ID = ANIMAL_BREED.ANIM_BREED_ID
WHERE MONTH(ANIMAL.ANIM_ARRIVAL_DATE) = 07;

-- QUESTION 16
SELECT ANIMAL.ANIM_NAME
FROM ANIMAL
JOIN ILLNESS
	ON ANIMAL.ANIM_ID = ILLNESS.ANIM_ID
WHERE ILLNESS.ILL_START_DATE = '2007-05-19' AND ILLNESS.ILL_END_DATE = '2007-06-03';

-- QUESTION 17
SELECT DONATOR.DON_FIRST_NAME, DONATOR.DON_LAST_NAME, PAYMENT.PAY_AMOUNT
FROM DONATOR
JOIN DONATOR_PAYMENT
	ON DONATOR.DON_ID = DONATOR_PAYMENT.DON_ID
JOIN PAYMENT
	ON DONATOR_PAYMENT.PAY_ID = PAYMENT.PAY_ID
WHERE PAYMENT.PAY_TYPE = 'Credit Card';

-- QUESTION 18
SELECT VOLUNTEER.VOL_FIRST_NAME, VOLUNTEER.VOL_LAST_NAME, VOLUNTEER.VOL_PHONE_NUMBER
FROM VOLUNTEER
JOIN VOLUNTEER_DEPT_HISTORY
	ON VOLUNTEER.VOL_ID = VOLUNTEER_DEPT_HISTORY.VOL_ID
JOIN DEPARTMENT
	ON VOLUNTEER_DEPT_HISTORY.DEPT_ID = DEPARTMENT.DEPT_ID
WHERE DEPARTMENT.DEPT_NAME = 'Security' AND VOLUNTEER_DEPT_HISTORY.VOL_END_DATE IS NULL;

-- QUESTION 19
SELECT ANIMAL.ANIM_NAME, ANIMAL_BREED.ANIM_BREED_NAME, ILLNESS_TYPE.ILL_DESCRIPTION
FROM ANIMAL_BREED
JOIN ANIMAL
	ON ANIMAL_BREED.ANIM_BREED_ID = ANIMAL.ANIM_BREED_ID
JOIN ILLNESS
	ON ANIMAL.ANIM_ID = ILLNESS.ANIM_ID
JOIN ILLNESS_TYPE
	ON ILLNESS.ILL_TYPE_ID = ILLNESS_TYPE.ILL_TYPE_ID
WHERE ANIMAL.ANIM_ACQUIRED_FROM = 'Como Zoo' AND ANIMAL.ANIM_NAME LIKE '%n';

-- QUESTION 20
SELECT FOOD_ITEM.FOOD_ITEM_DESCRIPTION, FOOD_ITEM_SUPPLIER.FOOD_PRICE, FOOD_CATEGORY.FOOD_CATEGORY_DESCRIPTION, FOOD_SUPPLIER.FOOD_SUP_COMPANY_NAME
FROM FOOD_CATEGORY
JOIN FOOD_ITEM
	ON FOOD_CATEGORY.FOOD_CATEGORY_ID = FOOD_ITEM.FOOD_CATEGORY_ID
JOIN FOOD_ITEM_SUPPLIER
	ON FOOD_ITEM.FOOD_ITEM_ID = FOOD_ITEM_SUPPLIER.FOOD_ITEM_ID
JOIN FOOD_SUPPLIER
	ON FOOD_ITEM_SUPPLIER.FOOD_SUP_ID = FOOD_SUPPLIER.FOOD_SUP_ID
WHERE FOOD_ITEM_SUPPLIER.FOOD_PRICE < 40;

-- QUESTION 21
SELECT EMPLOYEE.EMP_FIRST_NAME, EMPLOYEE.EMP_LAST_NAME, MAINTENENCE.MAINT_TITLE
FROM MAINTENENCE
JOIN EMPLOYEE
	ON MAINTENENCE.EMP_ID = EMPLOYEE.EMP_ID
WHERE EMPLOYEE.DEPT_ID IN (
	SELECT VOLUNTEER_DEPT_HISTORY.DEPT_ID
    FROM VOLUNTEER_DEPT_HISTORY
    WHERE VOLUNTEER_DEPT_HISTORY.VOL_START_DATE BETWEEN '2010-03-01' AND '2010-03-31');
    
-- QUESTION 22
SELECT CORPORATE_SPONSOR.SPON_COMPANY_NAME, CORPORATE_SPONSOR_PAYMENT.SPON_PAY_PAYMENT_DATE, PAYMENT.PAY_AMOUNT, ZOO.ZOO_NAME, PRIVATE_EVENT_PAYMENT.PRIV_EVEN_PAY_PAYMENT_DATE
FROM ZOO
JOIN CORPORATE_SPONSOR
	ON ZOO.ZOO_ID = CORPORATE_SPONSOR.ZOO_ID
JOIN CORPORATE_SPONSOR_PAYMENT
	ON CORPORATE_SPONSOR.SPON_ID = CORPORATE_SPONSOR_PAYMENT.SPON_ID
JOIN PAYMENT
	ON CORPORATE_SPONSOR_PAYMENT.PAY_ID = PAYMENT.PAY_ID
LEFT JOIN PRIVATE_EVENT_PAYMENT
	ON PAYMENT.PAY_ID = PRIVATE_EVENT_PAYMENT.PAY_ID
WHERE PAYMENT.PAY_AMOUNT > 5000;

-- QUESTION 23
SELECT EMPLOYEE.EMP_FIRST_NAME, EMPLOYEE.EMP_LAST_NAME, RESEARCHER.RES_BONUS
FROM EMPLOYEE
JOIN RESEARCHER
    ON EMPLOYEE.EMP_ID = RESEARCHER.EMP_ID;

-- QUESTION 24
SELECT PRODUCT.PRODUCT_NAME, PURCHASED_PRODUCT.PRODUCT_PURCHASE_DATE, MANUFACTURED_PRODUCT.PRODUCT_FINISH_DATE
FROM PRODUCT
LEFT JOIN PURCHASED_PRODUCT 
	ON PRODUCT.PRODUCT_ID = PURCHASED_PRODUCT.PRODUCT_ID
LEFT JOIN MANUFACTURED_PRODUCT 
	ON PRODUCT.PRODUCT_ID = MANUFACTURED_PRODUCT.PRODUCT_ID
ORDER BY PURCHASED_PRODUCT.PRODUCT_PURCHASE_DATE, MANUFACTURED_PRODUCT.PRODUCT_FINISH_DATE;

-- QUESTION 25
SELECT DEPARTMENT.DEPT_NAME, EMPLOYEE.EMP_FIRST_NAME, EMPLOYEE.EMP_LAST_NAME
FROM DEPARTMENT
LEFT JOIN EMPLOYEE
	ON DEPARTMENT.DEPT_ID = EMPLOYEE.DEPT_ID AND EMPLOYEE.EMP_TYPE = 'CS'
ORDER BY DEPARTMENT.DEPT_NAME, EMPLOYEE.EMP_LAST_NAME;

-- QUESTION 26
SELECT EMPLOYEE.EMP_FIRST_NAME, EMPLOYEE.EMP_LAST_NAME, OFFICE.OFFICE_ID, OFFICE.OFFICE_BUILDING
FROM EMPLOYEE
LEFT JOIN OFFICE
	ON EMPLOYEE.OFFICE_ID = OFFICE.OFFICE_ID
WHERE EMPLOYEE.EMP_LAST_NAME LIKE 'M%'
ORDER BY OFFICE.OFFICE_BUILDING DESC;

-- QUESTION 27
SELECT MAX(PRODUCT_SUGGESTED_PRICE) , MIN(PRODUCT_SUGGESTED_PRICE), (MAX(PRODUCT_SUGGESTED_PRICE) - MIN(PRODUCT_SUGGESTED_PRICE))
FROM PRODUCT;

-- QUESTION 28
SELECT EMP_FIRST_NAME, EMP_LAST_NAME, EMP_HIRE_DATE, EMP_SALARY
FROM EMPLOYEE
WHERE EMP_SALARY = (SELECT MIN(EMP_SALARY)
	FROM EMPLOYEE);
    
-- QUESTION 29
SELECT DONATOR.DON_FIRST_NAME, DONATOR.DON_LAST_NAME
FROM DONATOR
JOIN DONATOR_PAYMENT
	ON DONATOR.DON_ID = DONATOR_PAYMENT.DON_ID
WHERE MONTH(DONATOR_PAYMENT.DON_PAY_PAYMENT_DATE) = 1;

-- QUESTION 30
SELECT (PRODUCT_FINISH_DATE - PRODUCT_START_DATE)
FROM MANUFACTURED_PRODUCT
WHERE PRODUCT_START_DATE = (SELECT MAX(PRODUCT_START_DATE)
	FROM MANUFACTURED_PRODUCT);
